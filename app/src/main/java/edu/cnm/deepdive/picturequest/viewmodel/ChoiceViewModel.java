/*
    Copyright 2019 Brian Alexander

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

*/

package edu.cnm.deepdive.picturequest.viewmodel;

import android.app.Application;
import androidx.annotation.NonNull;
import androidx.lifecycle.AndroidViewModel;
import androidx.lifecycle.LiveData;
import edu.cnm.deepdive.picturequest.model.database.PictureQuestDatabase;
import edu.cnm.deepdive.picturequest.model.entity.Choice;
import java.util.List;

/**
 * {@link AndroidViewModel} class for the {@link edu.cnm.deepdive.picturequest.ChoiceFragment} to keep all
 * database queries necessary for game play off of the UI thread.
 */
public class ChoiceViewModel extends AndroidViewModel {

  /**
   * Initially created but now unused {@link LiveData} {@link Choice} left in in case later versions might need a single choice.
   */
  private LiveData<Choice> choice;

  /**
   * Constructor for the {@link ChoiceViewModel} initializes the instance.
   * @param application the Application
   */
  public ChoiceViewModel(@NonNull Application application) {
    super(application);
  }

  /**
   * Method to Query the database for information to be used in the {@link edu.cnm.deepdive.picturequest.ChoiceFragment}
   * specifically to get all {@link edu.cnm.deepdive.picturequest.model.entity.Input} with a sceneId for a specific {@link edu.cnm.deepdive.picturequest.model.entity.Scene}
   * @param id the sceneId passed in that is stored in the main activity.
   * @return {@link LiveData} {@link List} of {@link String} the inputs from the {@link edu.cnm.deepdive.picturequest.CameraFragment} and {@link edu.cnm.deepdive.picturequest.service.ClarifaiTask}
   */
  public LiveData<List<String>> getInputs(long id) {
    return PictureQuestDatabase.getInstance(getApplication()).getInputDao().getAllByScene(id);
  }

  /**
   * Method to get what {@link Choice} match coming from the current {@link edu.cnm.deepdive.picturequest.model.entity.Scene} based around a {@link List}
   * of {@link String} generated from {@link #getInputs(long)}.
   * @param id the sceneId the game is on.
   * @param objects {@link List} of {@link String} generated by the {@link #getInputs(long)} later on
   * @return {@link LiveData} {@link List} of {@link Choice} to be used in the Fragment to show buttons and allow navigation.
   */
  public LiveData<List<Choice>> getChoices(long id,
      List<String> objects) {
    return PictureQuestDatabase.getInstance(getApplication()).getChoiceDao()
        .getRelevantChoices(id, objects);
  }

}
